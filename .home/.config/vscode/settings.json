{
  "workbench.colorTheme": "Vesper",
  "vim.leader": "<space>",
  "vim.highlightedyank.enable": true,
  "editor.cursorBlinking": "smooth", // smol cursor animation, looks nice
  "editor.cursorSmoothCaretAnimation": "on",
  //     top bar
  "workbench.editor.editorActionsLocation": "hidden", // hides the "format" and ellipsis buttons on the top right of the window
  "vim.highlightedyank.duration": 400,
  "vim.hlsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<D-S-left>"],
      "after": "workbench.action.splitEditorLeft"
    },
    {
      "before": ["leader", "g"],
      "commands": ["workbench.files.action.showActiveFileInExplorer"]
    },
    {
      "before": ["leader", "L"],
      "commands": [
        {
          "command": "extension.multiCommand.execute",
          "args": {
            "sequence": [
              "workbench.action.splitEditorRight",
              "workbench.action.focusPreviousGroup",
              "workbench.action.closeActiveEditor",
              "workbench.action.focusNextGroup"
            ]
          }
        }
      ]
    },
    {
      "before": ["leader", "J"],
      "commands": [
        {
          "command": "extension.multiCommand.execute",
          "args": {
            "sequence": [
              "workbench.action.splitEditorDown",
              "workbench.action.focusPreviousGroup",
              "workbench.action.closeActiveEditor",
              "workbench.action.focusNextGroup"
            ]
          }
        }
      ]
    },
    {
      "before": ["leader", "a"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["leader", "r"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["leader", "R"],
      "commands": ["editor.action.refactor"]
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      "before": ["g", "d"],
      "commands": ["editor.action.goToDeclaration"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["W"],
      "after": ["0", "w"]
    },
    {
      "before": ["leader", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["leader", "e"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["g", "e"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["leader", "f"],
      "commands": ["editor.action.quickFix"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": ["leader", "f", "t"],
      "commands": ["markdownTablePrettify.prettifyTables"]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false
  },
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "editor.lineNumbers": "relative",
  "terminal.integrated.profiles.windows": {
    "Ubuntu (WSL)": {
      "path": "C:\\Windows\\System32\\wsl.exe",
      "args": ["-d", "Ubuntu"]
    }
  },
  "terminal.integrated.defaultProfile.windows": "Ubuntu (WSL)",
  "editor.codeActionsOnSave": {
    "source.organizeImports": "explicit",
    "source.fixAll": "explicit"
  },
  "settingsSync.ignoredSettings": ["terminal.external.windowsExec"],
  "debug.console.fontFamily": "GeistMono Nerd Font",
  "editor.fontSize": 11,
  "editor.fontFamily": "GeistMono Nerd Font",
  "terminal.integrated.fontSize": 11,
  "terminal.integrated.fontFamily": "GeistMono Nerd Font",
  "explorer.confirmDragAndDrop": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.activityBar.iconClickBehavior": "focus",
  "workbench.activityBar.location": "hidden",
  "workbench.statusBar.visible": false,
  "editor.formatOnSave": true,
  "window.commandCenter": false,
  "workbench.layoutControl.enabled": false,
  "workbench.iconTheme": "chalice-icon-theme",
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
  "editor.renderWhitespace": "none",
  "editor.renderControlCharacters": false,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[dart]": {
    // Automatically format code on save and during typing of certain characters
    // (like `;` and `}`).
    "editor.formatOnSave": true,
    "editor.formatOnType": true,

    // Draw a guide line at 80 characters, where Dart's formatting will wrap code.
    "editor.rulers": [80],

    // Disables built-in highlighting of words that match your selection. Without
    // this, all instances of the selected text will be highlighted, interfering
    // with Dart's ability to highlight only exact references to the selected variable.
    "editor.selectionHighlight": false,

    // Allows pressing <TAB> to complete snippets such as `for` even when the
    // completion list is not visible.
    "editor.tabCompletion": "onlySnippets",

    // By default, VS Code will populate code completion with words found in the
    // matching documents when a language service does not provide its own completions.
    // This results in code completion suggesting words when editing comments and
    // strings. This setting will prevent that.
    "editor.wordBasedSuggestions": "off"
  },
  "window.menuBarVisibility": "compact",
  "chat.commandCenter.enabled": false,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      // remove peppermint flavor
      {
        "name": "String, Symbols, Inherited Class",
        "scope": [
          "string",
          "constant.other.symbol",
          "constant.other.key",
          "meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js"
        ],
        "settings": {
          "foreground": "#A0A0A0"
        }
      },
      {
        "name": "CSS ID's",
        "scope": [
          "source.sass keyword.control",
          "meta.attribute-selector.scss"
        ],
        "settings": {
          "foreground": "#ffffff"
        }
      },
      {
        "name": "Inserted",
        "scope": ["markup.inserted"],
        "settings": {
          "foreground": "#ffffff"
        }
      }
    ]
  },
  "workbench.colorCustomizations": {
    "terminal.ansiBlack": "#dcdcdc", // Pastel gray
    "terminal.ansiRed": "#f28b82", // Pastel red
    "terminal.ansiGreen": "#81c995", // Pastel green
    "terminal.ansiYellow": "#fdd663", // Pastel yellow
    "terminal.ansiBlue": "#aecbfa", // Pastel blue
    "terminal.ansiMagenta": "#d7aefb", // Pastel purple
    "terminal.ansiCyan": "#a7ffeb", // Pastel cyan
    "terminal.ansiWhite": "#ffffff", // White
    "terminal.ansiBrightBlack": "#e8eaed", // Bright pastel gray
    "terminal.ansiBrightRed": "#fbbc04", // Bright pastel red-orange
    "terminal.ansiBrightGreen": "#ccff90", // Bright pastel green
    "terminal.ansiBrightYellow": "#fff475", // Bright pastel yellow
    "terminal.ansiBrightBlue": "#8ab4f8", // Bright pastel blue
    "terminal.ansiBrightMagenta": "#c58af9", // Bright pastel purple
    "terminal.ansiBrightCyan": "#80d8ff", // Bright pastel cyan
    "terminal.ansiBrightWhite": "#ffffff" // Bright white
  },
  "chat.editor.fontSize": 11
}
